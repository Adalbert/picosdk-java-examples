/**************************************************************************
 *
 * Filename:    USBDrDAQJNA.java
 *
 * Author:      HSM
 *
 * Description: 
 *  This is an example program demonstrating how to use Java and Java
 * Native Access (JNA) in order to call functions from the usbdrdaq library
 * for the USB DrDAQ data logger in order to:
 * 
 *      Open a connection to a unit
 *      Control the LED
 *      Close the connection to the unit
 * 
 * Copyright Â© 2016-2017 Pico Technology Ltd. See LICENSE file for terms.
 * 
 ***************************************************************************/ 
package com.picotech.picolog.usbdrdaq.jna;

public class USBDrDAQJNAJFrame extends javax.swing.JFrame 
{

    USBDrDAQJNA usbDrDAQJNA;
    
    /**
     * Creates new form USBDrDAQJNAJFrame
     */
    public USBDrDAQJNAJFrame() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectionJPanel = new javax.swing.JPanel();
        connectUSBDrDAQJButton = new javax.swing.JButton();
        disconnectUSBDrDAQJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usbDrDAQInfoJTextArea = new javax.swing.JTextArea();
        usbDrDAQJLabel = new javax.swing.JLabel();
        ledJPanel = new javax.swing.JPanel();
        redLEDJSlider = new javax.swing.JSlider();
        greenLEDJSlider = new javax.swing.JSlider();
        blueLEDJSlider = new javax.swing.JSlider();
        ledControlJLabel = new javax.swing.JLabel();
        enableLEDJToggleButton = new javax.swing.JToggleButton();
        ledRedJLabel = new javax.swing.JLabel();
        ledGreenJLabel = new javax.swing.JLabel();
        ledBlueJLabel = new javax.swing.JLabel();
        redLEDJTextField = new javax.swing.JTextField();
        greenLEDJTextField = new javax.swing.JTextField();
        blueLEDJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("USB DrDAQ Java JNA Example");
        setName("USB DrDAQ JNA"); // NOI18N

        connectUSBDrDAQJButton.setText("Connect");
        connectUSBDrDAQJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectUSBDrDAQJButtonActionPerformed(evt);
            }
        });

        disconnectUSBDrDAQJButton.setText("Disconnect");
        disconnectUSBDrDAQJButton.setEnabled(false);
        disconnectUSBDrDAQJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectUSBDrDAQJButtonActionPerformed(evt);
            }
        });

        usbDrDAQInfoJTextArea.setEditable(false);
        usbDrDAQInfoJTextArea.setColumns(20);
        usbDrDAQInfoJTextArea.setLineWrap(true);
        usbDrDAQInfoJTextArea.setRows(6);
        usbDrDAQInfoJTextArea.setEnabled(false);
        jScrollPane1.setViewportView(usbDrDAQInfoJTextArea);

        usbDrDAQJLabel.setText("Unit Info:");

        javax.swing.GroupLayout connectionJPanelLayout = new javax.swing.GroupLayout(connectionJPanel);
        connectionJPanel.setLayout(connectionJPanelLayout);
        connectionJPanelLayout.setHorizontalGroup(
            connectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(connectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(connectionJPanelLayout.createSequentialGroup()
                        .addGroup(connectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(disconnectUSBDrDAQJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usbDrDAQJLabel)
                            .addComponent(connectUSBDrDAQJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        connectionJPanelLayout.setVerticalGroup(
            connectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectUSBDrDAQJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(disconnectUSBDrDAQJButton)
                .addGap(22, 22, 22)
                .addComponent(usbDrDAQJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(connectionJPanel, java.awt.BorderLayout.LINE_START);

        redLEDJSlider.setMaximum(255);
        redLEDJSlider.setValue(0);
        redLEDJSlider.setEnabled(false);
        redLEDJSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                redLEDJSliderStateChanged(evt);
            }
        });

        greenLEDJSlider.setMaximum(255);
        greenLEDJSlider.setValue(0);
        greenLEDJSlider.setEnabled(false);
        greenLEDJSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                greenLEDJSliderStateChanged(evt);
            }
        });

        blueLEDJSlider.setMaximum(255);
        blueLEDJSlider.setValue(0);
        blueLEDJSlider.setEnabled(false);
        blueLEDJSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blueLEDJSliderStateChanged(evt);
            }
        });

        ledControlJLabel.setText("LED Control");

        enableLEDJToggleButton.setText("Enable LED");
        enableLEDJToggleButton.setEnabled(false);
        enableLEDJToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableLEDJToggleButtonActionPerformed(evt);
            }
        });

        ledRedJLabel.setText("Red:");

        ledGreenJLabel.setText("Green:");

        ledBlueJLabel.setText("Blue:");

        redLEDJTextField.setEditable(false);
        redLEDJTextField.setEnabled(false);
        redLEDJTextField.setMinimumSize(new java.awt.Dimension(59, 26));
        redLEDJTextField.setPreferredSize(new java.awt.Dimension(59, 26));

        greenLEDJTextField.setEditable(false);
        greenLEDJTextField.setEnabled(false);
        greenLEDJTextField.setMinimumSize(new java.awt.Dimension(59, 26));
        greenLEDJTextField.setPreferredSize(new java.awt.Dimension(59, 26));

        blueLEDJTextField.setEditable(false);
        blueLEDJTextField.setEnabled(false);
        blueLEDJTextField.setMinimumSize(new java.awt.Dimension(59, 26));
        blueLEDJTextField.setPreferredSize(new java.awt.Dimension(59, 26));

        javax.swing.GroupLayout ledJPanelLayout = new javax.swing.GroupLayout(ledJPanel);
        ledJPanel.setLayout(ledJPanelLayout);
        ledJPanelLayout.setHorizontalGroup(
            ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ledJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ledControlJLabel)
                    .addGroup(ledJPanelLayout.createSequentialGroup()
                        .addComponent(enableLEDJToggleButton)
                        .addGap(18, 18, 18)
                        .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ledGreenJLabel)
                            .addComponent(ledRedJLabel)
                            .addComponent(ledBlueJLabel))
                        .addGap(18, 18, 18)
                        .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ledJPanelLayout.createSequentialGroup()
                                .addComponent(redLEDJSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redLEDJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(ledJPanelLayout.createSequentialGroup()
                                .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ledJPanelLayout.createSequentialGroup()
                                        .addComponent(greenLEDJSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(greenLEDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ledJPanelLayout.createSequentialGroup()
                                        .addComponent(blueLEDJSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueLEDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        ledJPanelLayout.setVerticalGroup(
            ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ledJPanelLayout.createSequentialGroup()
                .addComponent(ledControlJLabel)
                .addGap(9, 9, 9)
                .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enableLEDJToggleButton)
                        .addComponent(ledRedJLabel))
                    .addComponent(redLEDJSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(redLEDJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(greenLEDJSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ledGreenJLabel)
                    .addComponent(greenLEDJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(ledJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ledBlueJLabel)
                    .addComponent(blueLEDJSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blueLEDJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(ledJPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectUSBDrDAQJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectUSBDrDAQJButtonActionPerformed
        
        usbDrDAQJNA = new USBDrDAQJNA();
        
        if (usbDrDAQJNA.isConnected())
        {
        
            connectUSBDrDAQJButton.setEnabled(false);
            disconnectUSBDrDAQJButton.setEnabled(true);

            usbDrDAQInfoJTextArea.setEnabled(true);

            
            
            enableLEDJToggleButton.setEnabled(true);
            
        }
        else
        {
            //TODO: Error dialog
        }
    }//GEN-LAST:event_connectUSBDrDAQJButtonActionPerformed

    private void enableLEDJToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableLEDJToggleButtonActionPerformed
        
        int enabled = 0;
        
        if(enableLEDJToggleButton.isSelected())
        {
            redLEDJSlider.setEnabled(true);
            greenLEDJSlider.setEnabled(true);
            blueLEDJSlider.setEnabled(true);
            
            redLEDJTextField.setEnabled(true);
            greenLEDJTextField.setEnabled(true);
            blueLEDJTextField.setEnabled(true);
            
            enabled = 1;
        }
        else
        {
            redLEDJSlider.setEnabled(false);
            greenLEDJSlider.setEnabled(false);
            blueLEDJSlider.setEnabled(false);
            
            redLEDJTextField.setEnabled(false);
            greenLEDJTextField.setEnabled(false);
            blueLEDJTextField.setEnabled(false);
        }
        
        int status = usbDrDAQJNA.enableLED(enabled);
        
    }//GEN-LAST:event_enableLEDJToggleButtonActionPerformed

    private void disconnectUSBDrDAQJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectUSBDrDAQJButtonActionPerformed
        // TODO add your handling code here:
        usbDrDAQJNA.disconnect();
        
        // Restore open button
        connectUSBDrDAQJButton.setEnabled(true);
        
        usbDrDAQInfoJTextArea.setText("");
        usbDrDAQInfoJTextArea.setEnabled(false);

        // Disconnect
        // Change state of panel and LED toggle button
        enableLEDJToggleButton.setEnabled(false);
        enableLEDJToggleButton.setSelected(false);
        
        redLEDJSlider.setEnabled(false);
        greenLEDJSlider.setEnabled(false);
        blueLEDJSlider.setEnabled(false);
        
        redLEDJTextField.setEnabled(false);
        greenLEDJTextField.setEnabled(false);
        blueLEDJTextField.setEnabled(false);
        
        resetLEDJSliderValues();
        
        disconnectUSBDrDAQJButton.setEnabled(false);
    }//GEN-LAST:event_disconnectUSBDrDAQJButtonActionPerformed

    private void redLEDJSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_redLEDJSliderStateChanged
        setUSBDrDAQLED();
        redLEDJTextField.setText(String.valueOf(redLEDJSlider.getValue()));
    }//GEN-LAST:event_redLEDJSliderStateChanged

    private void greenLEDJSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_greenLEDJSliderStateChanged
        setUSBDrDAQLED();
        greenLEDJTextField.setText(String.valueOf(greenLEDJSlider.getValue()));
    }//GEN-LAST:event_greenLEDJSliderStateChanged

    private void blueLEDJSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blueLEDJSliderStateChanged
       setUSBDrDAQLED();
       blueLEDJTextField.setText(String.valueOf(blueLEDJSlider.getValue()));
    }//GEN-LAST:event_blueLEDJSliderStateChanged

    private void setUSBDrDAQLED()
    {
        int status = usbDrDAQJNA.setLED((short) redLEDJSlider.getValue(), (short) greenLEDJSlider.getValue(), (short) blueLEDJSlider.getValue());

    }
    
    private void resetLEDJSliderValues()
    {
        redLEDJSlider.setValue(0);
        greenLEDJSlider.setValue(0);
        blueLEDJSlider.setValue(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(USBDrDAQJNAJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(USBDrDAQJNAJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(USBDrDAQJNAJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(USBDrDAQJNAJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new USBDrDAQJNAJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider blueLEDJSlider;
    private javax.swing.JTextField blueLEDJTextField;
    private javax.swing.JButton connectUSBDrDAQJButton;
    private javax.swing.JPanel connectionJPanel;
    private javax.swing.JButton disconnectUSBDrDAQJButton;
    private javax.swing.JToggleButton enableLEDJToggleButton;
    private javax.swing.JSlider greenLEDJSlider;
    private javax.swing.JTextField greenLEDJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ledBlueJLabel;
    private javax.swing.JLabel ledControlJLabel;
    private javax.swing.JLabel ledGreenJLabel;
    private javax.swing.JPanel ledJPanel;
    private javax.swing.JLabel ledRedJLabel;
    private javax.swing.JSlider redLEDJSlider;
    private javax.swing.JTextField redLEDJTextField;
    private javax.swing.JTextArea usbDrDAQInfoJTextArea;
    private javax.swing.JLabel usbDrDAQJLabel;
    // End of variables declaration//GEN-END:variables
}
